<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="kr.co.koscom.oppf.apt.dataSet.service.impl.DataSetManageDAO">

  	<typeAlias alias="DataSetManageVO" type="kr.co.koscom.oppf.apt.dataSet.service.DataSetManageVO"/>
	<typeAlias alias="DataSetSummaryVO" type="kr.co.koscom.oppf.apt.dataSet.service.DataSetSummaryVO"/>
	<typeAlias alias="DataSetEquityVO" type="kr.co.koscom.oppf.apt.dataSet.service.DataSetEquityVO"/>
	<typeAlias alias="DataSetFundVO" type="kr.co.koscom.oppf.apt.dataSet.service.DataSetFundVO"/>
	<typeAlias alias="DataSetEtcVO" type="kr.co.koscom.oppf.apt.dataSet.service.DataSetEtcVO"/>
	<typeAlias alias="DataSetTransactionVO" type="kr.co.koscom.oppf.apt.dataSet.service.DataSetTransactionVO"/>
	<typeAlias alias="DataSetGroupVO" type="kr.co.koscom.oppf.apt.dataSet.service.DataSetGroupVO"/>
	<!--
	   * @Method Name        : apt.MockUpDAO.selectLoginProfile
	   * @Method description : MockUp List 조회
	   * @param              : MockUpVO
	   * @return             : MockUpVO
	   * @throws             : Exception
	-->

	<sql id="fromWhereAnd">
		<isNotEmpty property="searchKeyword">
			<!-- 이름 -->
			<isEqual property="searchCondition" compareValue="customerNameKor" prepend="and">
				b.customer_name_kor like concat('%', #searchKeyword#, '%')
			</isEqual>
			<!-- uri -->
			<isEqual property="searchCondition" compareValue="customerId" prepend="and">
				b.customer_id like concat('%', #searchKeyword#, '%')
			</isEqual>
			<!-- MSG.ID -->
			<isEqual property="searchCondition" compareValue="customerVtaccountNumber" prepend="and">
				a.customer_vtaccount_no like concat('%', #searchKeyword#, '%')
			</isEqual>
			<!-- 별칭 -->
			<isEqual property="searchCondition" compareValue="customerVtaccountAlias" prepend="and">
				a.customer_vtaccount_alias like concat('%', #searchKeyword#, '%')
			</isEqual>
			<!-- 전체 -->
			<isEqual property="searchCondition" compareValue="all" prepend="and">
				(
					b.customer_name_kor like concat('%', #searchKeyword#, '%') or
					b.customer_id like concat('%', #searchKeyword#, '%') or
					a.customer_vtaccount_no like concat('%', #searchKeyword#, '%') or
					a.customer_vtaccount_alias like concat('%', #searchKeyword#, '%')
				)
			</isEqual>
		</isNotEmpty>
		<!-- 서비스 제공자 -->
		<isNotEmpty property="searchPubcompanyCodeId" prepend="and">
			<isNotEqual property="searchPubcompanyCodeIdAllYn" compareValue="Y">
				a.company_code_id
				<iterate  property="searchPubcompanyCodeId" prepend="IN" open="(" close=")" conjunction=",">
					#searchPubcompanyCodeId[]#
				</iterate>
			</isNotEqual>
		</isNotEmpty>
		<!-- data YN -->
		<isNotEmpty property="searchDataSetYn" prepend="and">
			<isNotEqual property="searchDataSetYnAllYn" compareValue="Y">
				if(isnull(c.customer_vtaccount_no), 'N', 'Y')
				<iterate  property="searchDataSetYn" prepend="IN" open="(" close=")" conjunction=",">
					#searchDataSetYn[]#
				</iterate>
			</isNotEqual>
		</isNotEmpty>
		<!-- 조회일 -->
		<isNotEmpty property="searchDateType">
			<!-- 등록일 -->
			<isEqual property="searchDateType" compareValue="create" prepend="and">
				ifnull(date_format(a.create_date, '%Y%m%d'), '') between replace(#searchDateFrom#, '-', '') and replace(#searchDateTo#, '-', '')
			</isEqual>
			<!-- 수정일 -->
			<isEqual property="searchDateType" compareValue="update" prepend="and">
				ifnull(date_format(a.update_date, '%Y%m%d'), '') between replace(#searchDateFrom#, '-', '') and replace(#searchDateTo#, '-', '')
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="customerId">
			and  b.customer_id = #customerId#
		</isNotEmpty>
	</sql>
	<select id="apt.DataSetManageDAO.selectDataSetManagementList" parameterClass="DataSetManageVO" resultClass="DataSetManageVO">
		select
				b.customer_reg_no as customerRegNumber,
				b.customer_name_kor as customerNameKor,
				b.customer_id as customerId,
				a.customer_vtaccount_alias as customerVtaccountAlias,
				b.customer_reg_status as customerRegStatus,
                b.customer_dataset_lock_yn                   as customerDatasetLockYn,
				(
					select code_name_kor
					from com_system_code
					where concat(system_grp_code, system_code) = b.customer_reg_status
				) as customerRegStatusName,
				a.company_code_id as companyCodeId,
				(
					select company_name_kor_alias
					from com_company_code
					where company_code_id = a.company_code_id) as companyNameKorAlias,
				(
					select code_name_kor
					from com_system_code
					where concat(system_grp_code, system_code) = a.customer_realaccount_type
				) as customerRealaccountTypeName,
				a.customer_vtaccount_no as customerVtaccountNumber,
				a.customer_realaccount_no as customerRealaccountNumber,
				if(isnull(c.customer_vtaccount_no), 'N', 'Y') as dataSetYn,
				date_format(c.create_date,'%Y-%m-%d %H:%i') as createDate,
				date_format(c.update_date,'%Y-%m-%d %H:%i') as updateDate
		from   spt_customer_account_profile a
		inner join   spt_customer_info_profile b
		on 	a.customer_reg_no = b.customer_reg_no
		and b.delete_date is null
		left outer join dataset_account_profile c
		on 	a.customer_vtaccount_no = c.customer_vtaccount_no
		and a.customer_reg_no = c.customer_reg_no
		and a.company_code_id = c.company_code_id
		and a.customer_realaccount_no = c.customer_realaccount_no
		where a.customer_reg_no is not null
		and   a.company_code_id is not null
		and   a.customer_realaccount_no is not null
		and   a.customer_vtaccount_no is not null
		and   a.customer_reg_no != ''
		and   a.company_code_id != ''
		and   a.customer_realaccount_no != ''
		and   a.customer_vtaccount_no != ''
		and   a.customer_vtaccount_status = 'G009002'
        <include refid="fromWhereAnd"/>
        <include refid="CmmnFuncDAO.CmmnPaging"/>
	</select>

    <select id="apt.DataSetManageDAO.selectDataSetManagementExcel" parameterClass="DataSetManageVO" resultClass="DataSetManageVO">
        select
				b.customer_reg_no as customerRegNumber,
        		b.customer_name_kor as customerNameKor,
        		b.customer_id as customerId,
        		a.customer_vtaccount_alias as customerVtaccountAlias,
        		b.customer_reg_status as customerRegStatus,
                b.customer_dataset_lock_yn                   as customerDatasetLockYn,
        		(
					select code_name_kor
					from com_system_code
					where concat(system_grp_code, system_code) = b.customer_reg_status
				) as customerRegStatusName,
        		a.company_code_id as companyCodeId,
        		(
					select company_name_kor_alias
					from com_company_code
					where company_code_id = a.company_code_id) as companyNameKorAlias,
        		(
					select code_name_kor
					from com_system_code
					where concat(system_grp_code, system_code) = a.customer_realaccount_type
        		) as customerRealaccountTypeName,
        		a.customer_vtaccount_no as customerVtaccountNumber,
        		a.customer_realaccount_no as customerRealaccountNumber,
        		if(isnull(c.customer_vtaccount_no), 'N', 'Y') as dataSetYn,
        		date_format(c.create_date,'%Y-%m-%d %H:%i') as createDate,
        		date_format(c.update_date,'%Y-%m-%d %H:%i') as updateDate
        from   spt_customer_account_profile a
        inner join   spt_customer_info_profile b
		on 	a.customer_reg_no = b.customer_reg_no
		and b.delete_date is null
        left outer join dataset_account_profile c
		on 	a.customer_vtaccount_no = c.customer_vtaccount_no
		and a.customer_reg_no = c.customer_reg_no
		and a.company_code_id = c.company_code_id
		and a.customer_realaccount_no = c.customer_realaccount_no
        where a.customer_reg_no is not null
       	and   a.company_code_id is not null
       	and   a.customer_realaccount_no is not null
       	and   a.customer_vtaccount_no is not null
       	and   a.customer_reg_no != ''
       	and   a.company_code_id != ''
       	and   a.customer_realaccount_no != ''
       	and   a.customer_vtaccount_no != ''
       	and   a.customer_vtaccount_status = 'G009002'
        <isEqual property="excelType" compareValue="excel">
            <include refid="fromWhereAnd"/>
        </isEqual>
		order by a.create_date desc
    </select>

	<select id="apt.DataSetManageDAO.selectDataSetManagementListCount" parameterClass="DataSetManageVO" resultClass="Integer">
		select
			count(*)
		from   spt_customer_account_profile a
		inner join   spt_customer_info_profile b
		on 	a.customer_reg_no = b.customer_reg_no
		and b.delete_date is null
		left outer join dataset_account_profile c
		on 	a.customer_vtaccount_no = c.customer_vtaccount_no
		and a.customer_reg_no = c.customer_reg_no
		and a.company_code_id = c.company_code_id
		and a.customer_realaccount_no = c.customer_realaccount_no
		where a.customer_reg_no is not null
		and   a.company_code_id is not null
		and   a.customer_realaccount_no is not null
		and   a.customer_vtaccount_no is not null
		and   a.customer_reg_no != ''
		and   a.company_code_id != ''
		and   a.customer_realaccount_no != ''
		and   a.customer_vtaccount_no != ''
		and   a.customer_vtaccount_status = 'G009002'
        <include refid="fromWhereAnd"/>
	</select>
	
	<insert id="apt.DataSetManageDAO.insertDataSetManagement" parameterClass="DataSetManageVO">
		insert into dataset_account_profile
		(customer_reg_no, company_code_id, customer_realaccount_no, customer_vtaccount_no,
		cash_balance, substitute, receivable, subs_margin,
		loan_credit, val_at_trade, value_at_cur, pro_loss,
		total_acc_val, cash_av_withdraw, amt, create_date,
		create_id, update_date, update_id)
		value
		(#customerRegNumber#, #companyCodeId#,#customerRealaccountNumber#,#customerVtaccountNumber#,
		0,0,0,0,
		0,0,0,0,
		0,0,0,now(),
		#createId#,now(),#createId#)
	</insert>

	<select id="apt.DataSetManageDAO.selectSummary" parameterClass="DataSetManageVO" resultClass="DataSetSummaryVO">
		select
				customer_reg_no as customerRegNumber,
				company_code_id as companyCodeId,
				customer_realaccount_no as customerRealaccountNumber,
				customer_vtaccount_no as customerVtaccountNumber,
				ifnull(cash_balance, 0) as cashBalance,
				ifnull(substitute, 0) as substitute,
				ifnull(receivable, 0) as receivable,
				ifnull(subs_margin, 0) as subsMargin,
				ifnull(loan_credit, 0) as loanCredit,
				ifnull(val_at_trade, 0) as valAtTrade,
				ifnull(value_at_cur, 0) as valueAtCur,
				ifnull(pro_loss, 0) as proLoss,
				ifnull(total_acc_val, 0) as totalAccVal,
				ifnull(cash_av_withdraw, 0) as cashAvWithdraw,
				ifnull(amt, 0) as amt,
				create_id as createId,
				date_format(create_date,'%Y-%m-%d %H:%i') as createDate,
				date_format(update_date,'%Y-%m-%d %H:%i') as updateDate,
				update_id as updateId
		from   dataset_account_profile
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
	</select>

	<select id="apt.DataSetManageDAO.balSelectEquityList" parameterClass="DataSetManageVO" resultClass="DataSetEquityVO">
		select
				customer_reg_no as customerRegNumber,
				company_code_id as companyCodeId,
				customer_realaccount_no as customerRealaccountNumber,
				customer_vtaccount_no as customerVtaccountNumber,
				dataset_equity_no as datasetEquityNumber,
				asset_type as assetType,
				isin_code as isinCode,
				ifnull(qty, 0) as quantity,
				ifnull(val_at_trade, 0) as valAtTrade,
				ifnull(val_at_cur, 0) as valAtCur,
				ifnull(pro_loss, 0) as proLoss,
				earning_rate as earningRate,
				dataset_type datasetType,
				date_format(create_date,'%Y-%m-%d %H:%i') as createDate,
				date_format(update_date,'%Y-%m-%d %H:%i') as updateDate,
				create_id as createId,
				update_id as updateId
		from   dataset_equity_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		and   dataset_type = #datasetType#
	</select>

	<select id="apt.DataSetManageDAO.balSelectFundList" parameterClass="DataSetManageVO" resultClass="DataSetFundVO">
		select
				customer_reg_no as customerRegNumber,
				company_code_id as companyCodeId,
				customer_realaccount_no as customerRealaccountNumber,
				customer_vtaccount_no as customerVtaccountNumber,
				dataset_fund_no as datasetFundNumber,
				fund_code as fundCode,
				fund_name as fundName,
				ifnull(val_at_trade, 0) as valAtTrade,
				ifnull(val_at_cur, 0) as valAtCur,
				ifnull(pro_loss, 0) as proLoss,
				first_date_buy as firstDateBuy,
				last_date_buy as lastDateBuy,
				maturity as maturity,
				ifnull(earning_rate, 0) as earningRate,
				ifnull(qty, 0) as quantity,
				dataset_type as datasetType,
				date_format(create_date,'%Y-%m-%d %H:%i') as createDate,
				date_format(update_date,'%Y-%m-%d %H:%i') as updateDate,
				create_id as createId,
				update_id as updateId
		from   dataset_fund_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		and   dataset_type = #datasetType#
	</select>

	<select id="apt.DataSetManageDAO.balSelectEtcList" parameterClass="DataSetManageVO" resultClass="DataSetEtcVO">
		select
				customer_reg_no as customerRegNumber,
				company_code_id as companyCodeId,
				customer_realaccount_no as customerRealaccountNumber,
				customer_vtaccount_no as customerVtaccountNumber,
				dataset_type as datasetType,
				dataset_etc_no as datasetEtcNumber,
				asset_type as assetType,
				asset_name as assetName,
				ifnull(qty, 0) as quantity,
				ifnull(val_at_trade, 0) as valAtTrade,
				ifnull(value_at_cur, 0) as valueAtCur,
				ifnull(earning_rate, 0) as earningRate,
				isin_code as isinCode,
				date_format(create_date,'%Y-%m-%d %H:%i') as createDate,
				date_format(update_date,'%Y-%m-%d %H:%i') as updateDate,
				create_id as createId,
				update_id as updateId
		from   dataset_etc_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		and   dataset_type = #datasetType#
	</select>

	<select id="apt.DataSetManageDAO.selectTransactionList" parameterClass="DataSetManageVO" resultClass="DataSetTransactionVO">
		select
				customer_reg_no as customerRegNumber,
				company_code_id as companyCodeId,
				customer_realaccount_no as customerRealaccountNumber,
				customer_vtaccount_no as customerVtaccountNumber,
				dataset_transaction_no as datasetTransactionNumber,
				isin_code as isinCode,
				trans_date as transDate,
				trans_type as transType,
				ifnull(change_amt, 0) as changeAmt,
				ifnull(change_qty, 0) as changeQuantity,
				ifnull(qty, 0) as quantity,
				date_format(create_date,'%Y-%m-%d %H:%i') as createDate,
				date_format(update_date,'%Y-%m-%d %H:%i') as updateDate,
				create_id as createId,
				update_id as updateId
		from   dataset_transaction_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
	</select>

	<select id="apt.DataSetManageDAO.selectGroupList" parameterClass="DataSetManageVO" resultClass="DataSetGroupVO">
		select
				customer_reg_no as customerRegNumber,
				company_code_id as companyCodeId,
				customer_realaccount_no as customerRealaccountNumber,
				customer_vtaccount_no as customerVtaccountNumber,
				isin_code as isinCode,
				group_name as groupName,
				modify_date as modifyDate,
				dataset_interest_no as datasetInterestNumber,
				date_format(create_date,'%Y-%m-%d %H:%i') as createDate,
				date_format(update_date,'%Y-%m-%d %H:%i') as updateDate,
				create_id as createId,
				update_id as updateId
		from   dataset_interest_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
	</select>

	<select id="apt.DataSetManageDAO.dataSetManagementDtl" parameterClass="DataSetManageVO" resultClass="DataSetManageVO">
		select
				b.customer_reg_no                            as customerRegNumber,
				a.customer_vtaccount_alias 					 as customerVtaccountAlias,
				b.customer_name_kor                          as customerNameKor,
				b.customer_id                                as customerId,
				b.customer_reg_status                        as customerRegStatus,
                b.customer_dataset_lock_yn                   as customerDatasetLockYn,
				(
					select code_name_kor
					from com_system_code
					where concat(system_grp_code, system_code) = b.customer_reg_status
				)		as customerRegStatusName,
				a.company_code_id                            AS companyCodeId,
				(
					select company_name_kor_alias
					from com_company_code
					where company_code_id = a.company_code_id
				)		as companyNameKorAlias,
				(
					select code_name_kor
					from com_system_code
					where concat(system_grp_code, system_code) = a.customer_realaccount_type
				) as customerRealaccountTypeName,
				a.customer_vtaccount_no                      AS customerVtaccountNumber,
				a.customer_realaccount_no 					 AS customerRealaccountNumber,
				if(isnull(c.customer_vtaccount_no), 'N', 'Y') AS dataSetYn
		from   spt_customer_account_profile a
		inner join spt_customer_info_profile b
		on    a.customer_reg_no = b.customer_reg_no AND b.delete_date IS NULL
		left outer join dataset_account_profile c
		on    a.customer_vtaccount_no = c.customer_vtaccount_no
		and   a.customer_reg_no = c.customer_reg_no
		and   a.company_code_id = c.company_code_id
		and   a.customer_realaccount_no = c.customer_realaccount_no
		where a.customer_reg_no = #customerRegNumber#
		<isNotEmpty property="companyCodeId">
			and a.company_code_id = #companyCodeId#
		</isNotEmpty>
		<isNotEmpty property="customerRealaccountNumber">
			and a.customer_realaccount_no = #customerRealaccountNumber#
		</isNotEmpty>
		and a.customer_vtaccount_no = #customerVtaccountNumber#
	</select>
	<update id="apt.DataSetManageDAO.updateSummary" parameterClass="DataSetSummaryVO">
		update
				dataset_account_profile
		set
				cash_balance = #cashBalance#,
				substitute = #substitute#,
				receivable = #receivable#,
				subs_margin = #subsMargin#,
				loan_credit = #loanCredit#,
				val_at_trade = #valAtTrade#,
				value_at_cur = #valueAtCur#,
				pro_loss = #proLoss#,
				total_acc_val = #totalAccVal#,
				cash_av_withdraw = #cashAvWithdraw#,
				amt = #amt#,
				update_date = now(),
				update_id = #createId#
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
	</update>
	<update id="apt.DataSetManageDAO.updateEquity" parameterClass="DataSetEquityVO">
		update  dataset_equity_info
		set
				asset_type = #assetType#,
				isin_code = #isinCode#,
				qty = #quantity#,
				val_at_trade = #valAtTrade#,
				val_at_cur = #valAtCur#,
				pro_loss = #proLoss#,
				earning_rate = #earningRate#,
				update_date = now(),
				update_id = #createId#
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		and   dataset_type = #datasetType#
		and   dataset_equity_no = #datasetEquityNumber#
	</update>
	<update id="apt.DataSetManageDAO.deleteEquity" parameterClass="DataSetEquityVO">
		delete
		from dataset_equity_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		<isNotEmpty property="datasetType">
			and dataset_type = #datasetType#
		</isNotEmpty>
		<isNotEmpty property="datasetEquityNumber">
			and dataset_equity_no = #datasetEquityNumber#
		</isNotEmpty>
	</update>
	<update id="apt.DataSetManageDAO.updateFund" parameterClass="DataSetFundVO">
		update  dataset_fund_info
		set
				fund_code = #fundCode#,
				fund_name = #fundName#,
				val_at_trade = #valAtTrade#,
				val_at_cur = #valAtCur#,
				pro_loss = #proLoss#,
				first_date_buy = #firstDateBuy#,
				last_date_buy = #lastDateBuy#,
				maturity = #maturity#,
				earning_rate = #earningRate#,
				qty = #quantity#,
				update_date = now(),
				update_id = #createId#
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		and   dataset_type = #datasetType#
		and   dataset_fund_no = #datasetFundNumber#
	</update>
	<update id="apt.DataSetManageDAO.deleteFund" parameterClass="DataSetFundVO">
		delete
		from dataset_fund_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		<isNotEmpty property="datasetType">
			and dataset_type = #datasetType#
		</isNotEmpty>
		<isNotEmpty property="datasetFundNumber">
			and dataset_fund_no = #datasetFundNumber#
		</isNotEmpty>
	</update>
	<update id="apt.DataSetManageDAO.updateEtc" parameterClass="DataSetEtcVO">
		update  dataset_etc_info
		set
				asset_type = #assetType#,
				asset_name = #assetName#,
				qty = #quantity#,
				val_at_trade = #valAtTrade#,
				value_at_cur = #valueAtCur#,
				earning_rate = #earningRate#,
				isin_code = #isinCode#,
				update_date = now(),
				update_id = #createId#
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		and   dataset_type = #datasetType#
		and   dataset_etc_no = #datasetEtcNumber#
	</update>
	<update id="apt.DataSetManageDAO.deleteEtc" parameterClass="DataSetEtcVO">
		delete
		from dataset_etc_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		<isNotEmpty property="datasetType">
			and dataset_type = #datasetType#
		</isNotEmpty>
		<isNotEmpty property="datasetEtcNumber">
			and dataset_etc_no = #datasetEtcNumber#
		</isNotEmpty>
	</update>
	<update id="apt.DataSetManageDAO.updateTransaction" parameterClass="DataSetTransactionVO">
		update dataset_transaction_info
		set
				isin_code = #isinCode#,
				trans_date = #transDate#,
				trans_type = #transType#,
				change_amt = #changeAmt#,
				change_qty = #changeQuantity#,
				qty = #quantity#,
				update_date = now(),
				update_id = #createId#
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		and   dataset_transaction_no = #datasetTransactionNumber#
	</update>
	<update id="apt.DataSetManageDAO.deleteTransaction" parameterClass="DataSetTransactionVO">
		delete
		from dataset_transaction_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		<isNotEmpty property="datasetTransactionNumber">
			and dataset_transaction_no = #datasetTransactionNumber#
		</isNotEmpty>
	</update>
	<update id="apt.DataSetManageDAO.updateGroup" parameterClass="DataSetGroupVO">
		update  dataset_interest_info
		set
				isin_code = #isinCode#,
				group_name = #groupName#,
				modify_date = #modifyDate#,
				update_date = now(),
				update_id = #createId#
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		and   dataset_interest_no = #datasetInterestNumber#
	</update>
	<update id="apt.DataSetManageDAO.deleteGroup" parameterClass="DataSetGroupVO">
		delete
		from dataset_interest_info
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
		<isNotEmpty property="datasetInterestNumber">
			and dataset_interest_no = #datasetInterestNumber#
		</isNotEmpty>
	</update>
	<update id="apt.DataSetManageDAO.deleteSummary" parameterClass="DataSetManageVO">
		delete
		from dataset_account_profile
		where customer_reg_no = #customerRegNumber#
		and   company_code_id = #companyCodeId#
		and   customer_realaccount_no = #customerRealaccountNumber#
		and   customer_vtaccount_no = #customerVtaccountNumber#
	</update>


    <!--cloneSummary-->
	<insert id="apt.DataSetManageDAO.cloneSummaryInfo" parameterClass="DataSetSummaryVO">
		insert
	  	into dataset_account_profile
			(
				customer_reg_no, company_code_id, customer_realaccount_no, customer_vtaccount_no,
				cash_balance, substitute, receivable, subs_margin,
				loan_credit, val_at_trade, value_at_cur, pro_loss,
				total_acc_val, cash_av_withdraw, amt, create_date,
				create_id, update_date, update_id
			)
		value
			(
				#customerRegNumber#, #companyCodeId#,#customerRealaccountNumber#,#customerVtaccountNumber#,
				#cashBalance#, #substitute#, #receivable#, #subsMargin#,
				#loanCredit#, #valAtTrade#, #valueAtCur#, #proLoss#,
				#totalAccVal#, #cashAvWithdraw#, #amt#, now(),
				#createId#,now(),#createId#
			)
	</insert>

    <!--cloneEquity-->
    <insert id="apt.DataSetManageDAO.cloneEquityInfo" parameterClass="DataSetEquityVO">
		<selectKey keyProperty="datasetEquityNumber" resultClass="java.lang.String">
			select  concat(date_format(sysdate(),'%Y%m%d'),
			lpad((
					select ifnull( max(cast(right(dataset_equity_no,3) as signed)), 0)+1
					from dataset_equity_info
					where left(dataset_equity_no,8) = concat(date_format(sysdate(),'%Y%m%d'))
				), 3, '0')
			) as datasetEquityNumber;
		</selectKey>
    INSERT INTO dataset_equity_info
			(
				customer_reg_no,
				company_code_id,
				customer_realaccount_no,
				customer_vtaccount_no,
				dataset_equity_no,
				asset_type,
				isin_code,
				qty,
				val_at_trade,
				val_at_cur,
				pro_loss,
				earning_rate,
				dataset_type,
				create_date,
				create_id,
				update_date,
				update_id
			)
    VALUES (
				#customerRegNumber#,
				#companyCodeId#,
				#customerRealaccountNumber#,
				#customerVtaccountNumber#,
				#datasetEquityNumber#,
				#assetType#,
				#isinCode#,
				#quantity#,
				#valAtTrade#,
				#valAtCur#,
				#proLoss#,
				#earningRate#,
				#datasetType#,
				now(),
				#createId#,
				now(),
				#createId#
			);
    </insert>

    <!--cloneFund-->
    <insert id="apt.DataSetManageDAO.cloneFundInfo" parameterClass="DataSetFundVO">
		<selectKey keyProperty="datasetFundNumber" resultClass="java.lang.String">
			select  concat(date_format(sysdate(),'%Y%m%d'),
				lpad((
					select ifnull( max(cast(right(dataset_fund_no,3) as signed)), 0)+1
					from dataset_fund_info
					where left(dataset_fund_no,8) = concat(date_format(sysdate(),'%Y%m%d'))
				), 3, '0')
			) as datasetFundNumber;
		</selectKey>
		INSERT INTO dataset_fund_info
			(
				customer_reg_no,
				company_code_id,
				customer_realaccount_no,
				customer_vtaccount_no,
				dataset_fund_no,
				dataset_type,
				fund_code,
				fund_name,
				val_at_trade,
				val_at_cur,
				pro_loss,
				first_date_buy,
				last_date_buy,
				maturity,
				earning_rate,
				qty,
				create_date,
				create_id,
				update_date,
				update_id
			)
		VALUES
			(
				#customerRegNumber#,
				#companyCodeId#,
				#customerRealaccountNumber#,
				#customerVtaccountNumber#,
				#datasetFundNumber#,
				#datasetType#,
				#fundCode#,
				#fundName#,
				#valAtTrade#,
				#valAtCur#,
				#proLoss#,
				#firstDateBuy#,
				#lastDateBuy#,
				#maturity#,
				#earningRate#,
				#quantity#,
				now(),
				#createId#,
				now(),
				#createId#
			);

	</insert>

    <!--cloneEtc-->
    <insert id="apt.DataSetManageDAO.cloneEtcInfo" parameterClass="DataSetEtcVO">
		<selectKey keyProperty="datasetEtcNumber" resultClass="java.lang.String">
			select  concat(date_format(sysdate(),'%Y%m%d'),
			lpad((
			select ifnull( max(cast(right(dataset_etc_no,3) as signed)), 0)+1
			from dataset_etc_info
			where left(dataset_etc_no,8) = concat(date_format(sysdate(),'%Y%m%d'))
			), 3, '0')
			) as datasetEtcNumber;
		</selectKey>
    INSERT INTO dataset_etc_info
               (customer_reg_no,
                company_code_id,
                customer_realaccount_no,
                customer_vtaccount_no,
                dataset_type,
                dataset_etc_no,
                asset_type,
                asset_name,
                qty,
                val_at_trade,
                value_at_cur,
                earning_rate,
                isin_code,
                create_date,
                create_id,
                update_date,
                update_id)
    VALUES   (#customerRegNumber#,
              #companyCodeId#,
              #customerRealaccountNumber#,
              #customerVtaccountNumber#,
              #datasetType#,
              #datasetEtcNumber#,
              #assetType#,
              #assetName#,
              #quantity#,
              #valAtTrade#,
              #valueAtCur#,
              #earningRate#,
              #isinCode#,
              now(),
              #createId#,
              now(),
              #createId#);
    </insert>

    <!--cloneTransaction-->
    <insert id="apt.DataSetManageDAO.cloneTransactionVOInfo" parameterClass="DataSetTransactionVO">
		<selectKey keyProperty="datasetTransactionNumber" resultClass="java.lang.String">
			select  concat(date_format(sysdate(),'%Y%m%d'),
				lpad((
					select ifnull( max(cast(right(dataset_transaction_no,3) as signed)), 0)+1
					from dataset_transaction_info
					where left(dataset_transaction_no,8) = concat(date_format(sysdate(),'%Y%m%d'))
				), 3, '0')
			) as datasetTransactionNumber;
		</selectKey>
    INSERT INTO dataset_transaction_info
		(
			 dataset_transaction_no,
			 isin_code,
			 trans_date,
			 trans_type,
			 change_amt,
			 change_qty,
			 qty,
			 customer_vtaccount_no,
			 create_date,
			 create_id,
			 update_date,
			 update_id,
			 customer_reg_no,
			 company_code_id,
			 customer_realaccount_no
		 )
    VALUES
		 (
				#datasetTransactionNumber#,
				#isinCode#,
				#transDate#,
				#transType#,
				#changeAmt#,
				#changeQuantity#,
				#quantity#,
				#customerVtaccountNumber#,
				now(),
				#createId#,
				now(),
				#createId#,
				#customerRegNumber#,
				#companyCodeId#,
				#customerRealaccountNumber#
		 );
    </insert>

    <!--cloneGroup-->
    <insert id="apt.DataSetManageDAO.cloneGroupInfo" parameterClass="DataSetGroupVO">
		<selectKey keyProperty="datasetInterestNumber" resultClass="java.lang.String">
			select  concat(date_format(sysdate(),'%Y%m%d'),
				lpad((
					select ifnull( max(cast(right(dataset_interest_no,3) as signed)), 0)+1
					from dataset_interest_info
					where left(dataset_interest_no,8) = concat(date_format(sysdate(),'%Y%m%d'))
				), 3, '0')
			) as datasetInterestNumber;
		</selectKey>
        INSERT INTO dataset_interest_info
			(
				customer_reg_no,
				company_code_id,
				customer_realaccount_no,
				customer_vtaccount_no,
				isin_code,
				group_name,
				modify_date,
				dataset_interest_no,
				create_date,
				create_id,
				update_date,
				update_id
			)
        VALUES
			(
				#customerRegNumber#,
				#companyCodeId#,
				#customerRealaccountNumber#,
				#customerVtaccountNumber#,
				#isinCode#,
				#groupName#,
				#modifyDate#,
				#datasetInterestNumber#,
				now(),
				#createId#,
				now(),
				  #createId#
			);
    </insert>
</sqlMap>