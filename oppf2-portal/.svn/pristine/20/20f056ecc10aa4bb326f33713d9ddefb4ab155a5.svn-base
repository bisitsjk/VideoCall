<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<!-- 
* @Project  : 핀테크 오픈플랫폼 구축
* @FileName : CmmEmailSend_SQL.xml
* @Comment  : 공통 이메일발송 기능을 제공하는 SQL XML
* @author   : 유제량
* @since    : 2016.05.25
* @version  : 1.0
*
* << 개정이력(Modification Information) >>
* 수정일                  수정자        수정내용
* 2016.05.25   유제량        최초생성
-->
<sqlMap namespace="kr.co.koscom.oppf.cmm.service.impl.CmmEmailSendDAO">
    
    <typeAlias  alias="CmmEmailSendVO"  type="kr.co.koscom.oppf.cmm.service.CmmEmailSendVO"/>
    <typeAlias  alias="CmmEmailCronSvcTermsVO"  type="kr.co.koscom.oppf.cmm.service.CmmEmailCronSvcTermsVO"/>
    
    <!--
     * @Method Name        : selectCmmComEmailSendInfo
     * @Method description : 이메일 템플릿을 조회해온다.
     * @param              : CmmEmailSendVO
     * @return             : CmmEmailSendVO
     * @throws             : Exception
     -->
    <select id="cmm.CmmEmailSendDAO.selectCmmComEmailSendInfo" parameterClass="CmmEmailSendVO" resultClass="CmmEmailSendVO">
        select
             a.email_send_type       as emailSendType                                       /* 순번         */  
            ,a.email_ver             as emailVer                                            /* FAQ 노출   */
            ,a.email_title           as emailTitle                                          /* 제목         */
            ,a.email_content         as emailContent                                        /* 내용         */ 
            ,ifnull(date_format(a.create_date, '%Y-%m-%d %H:%i'), '') as createDate         /* 생성 일시    */   
            ,ifnull(a.create_id,'') as createId                                             /* 생성 관리자  */  
            ,ifnull(date_format(a.update_date, '%Y-%m-%d %H:%i'), '') as updateDate         /* 변경 일시    */   
            ,ifnull(a.update_id,'') as updateId                                             /* 변경 관리자  */
        from com_email_temp_info a
        where 1=1
        and a.email_send_type = #emailSendType#
        <isNotEmpty property="emailVer">
            and a.email_ver = #emailVer#
        </isNotEmpty>
        <isEmpty property="emailVer">
            and a.email_ver = (
                select max(email_ver) email_ver
                from com_email_temp_info
                where email_send_type = #emailSendType#
            )
        </isEmpty>
    </select>
    
	<!--
     * @Method Name        : cmm.CmmEmailSendDAO.insertCmmComEmailSendInfo
     * @Method description : admin 포털 회원 등록
     * @param              : CmmEmailSendVO
     * @return             : string
     * @throws             : Exception
     -->
    <insert id="cmm.CmmEmailSendDAO.insertCmmComEmailSendInfo" parameterClass="CmmEmailSendVO">
        <selectKey keyProperty="emailRegNo" resultClass="java.lang.String">
            select concat(date_format(sysdate(),'%Y%m%d'), 
                   lpad( (
                            select ifnull( max(cast(right(email_reg_no,4) as signed)), 0)+1 
                            from com_email_send_info 
                            where left(email_reg_no,8) = concat(date_format(sysdate(),'%Y%m%d'))
                          ) , 4, '0')
                    ) as emailRegNo /* 이메일 발송 생성 번호 */
        </selectKey>
        insert into com_email_send_info(
            <isNotEmpty property="emailRegNo">
                email_reg_no,         /*이메일 발송 생성 번호*/
            </isNotEmpty>
            <isNotEmpty property="emailSendType">
				email_send_type,      /*이메일 유형          */
			</isNotEmpty>
            <isNotEmpty property="emailVer">
				email_ver,            /*이메일 버전          */
			</isNotEmpty>
            <isNotEmpty property="senderKind">
				sender_kind,          /*발신자 종류          */
			</isNotEmpty>
            <isNotEmpty property="senderId">	
				sender_id,            /*발신자 ID       */
			</isNotEmpty>
            <isNotEmpty property="receiverKind">
				receiver_kind,        /*수신자 종류          */
			</isNotEmpty>
            <isNotEmpty property="receiverId">
				receiver_id,          /*수신자 ID       */
			</isNotEmpty>
            <isNotEmpty property="receiverEmail">
				receiver_email,       /*수신자 email    */
			</isNotEmpty>
            <isNotEmpty property="emailTitle">
				email_title,          /*이메일 제목          */
			</isNotEmpty>
            <isNotEmpty property="emailContent">
				email_content,        /*이메일 내용          */
			</isNotEmpty>
            <!-- <isNotEmpty property="sendDate"> -->
				send_date,            /*최초 발신일자        */
			<!-- </isNotEmpty> -->
            <isNotEmpty property="sendId">
				send_id,              /*최초 발신자 ID    */
			</isNotEmpty>
            <!-- <isNotEmpty property="reSendCount">
				re_send_count,        /*재발신 건수          */
			</isNotEmpty>
            <isNotEmpty property="reSendDate">
				re_send_date,         /*재발신 일자          */
			</isNotEmpty>
            <isNotEmpty property="reSendId">
				re_send_id,           /*재발신자 ID      */
			</isNotEmpty> -->
			<isNotEmpty property="sendResult">
                send_result,           /*발송결과      */
            </isNotEmpty>
            <!-- <isNotEmpty property="sendResultDate"> -->
                send_result_date,       /*발송결과일자      */
            <!-- </isNotEmpty> -->
            <!-- <isNotEmpty property="reSendResult">
                re_send_result,         /*재발송결과      */
            </isNotEmpty>
            <isNotEmpty property="reSendResultDate">
                re_send_result_date,     /*재발송결과일자      */
            </isNotEmpty> -->            
	            create_date,          /*생성 일시            */
	            create_id,            /*생성자 ID       */
	            update_date,          /*변경 일시            */
	            update_id             /*변경자 ID        */
        )values(
            <isNotEmpty property="emailRegNo">
	            #emailRegNo#,
	        </isNotEmpty>
            <isNotEmpty property="emailSendType">   
	            #emailSendType#,
	        </isNotEmpty>
            <isNotEmpty property="emailVer">
	            #emailVer#,
	        </isNotEmpty>
            <isNotEmpty property="senderKind">
	            #senderKind#,    
	        </isNotEmpty>
            <isNotEmpty property="senderId">
	            #senderId#,      
	        </isNotEmpty>
            <isNotEmpty property="receiverKind">
	            #receiverKind#,  
	        </isNotEmpty>
            <isNotEmpty property="receiverId">
	            #receiverId#,    
	        </isNotEmpty>
            <isNotEmpty property="receiverEmail">
	            #receiverEmail#, 
	        </isNotEmpty>
            <isNotEmpty property="emailTitle">
	            #emailTitle#,    
	        </isNotEmpty>
            <isNotEmpty property="emailContent">
	            #emailContent#,  
	        </isNotEmpty>
            <!-- <isNotEmpty property="sendDate"> -->
	            sysdate(),      
	        <!-- </isNotEmpty> -->
            <isNotEmpty property="sendId">
	            #sendId#,
	        </isNotEmpty>
            <!-- <isNotEmpty property="reSendCount">
	            #reSendCount#,
	        </isNotEmpty>
            <isNotEmpty property="reSendDate">
	            #reSendDate#,
	        </isNotEmpty>
            <isNotEmpty property="reSendId">
	            #reSendId#,
	        </isNotEmpty> -->
	        <isNotEmpty property="sendResult">
                #sendResult#,
            </isNotEmpty>
            <!-- <isNotEmpty property="sendResultDate"> -->
                sysdate(),
            <!-- </isNotEmpty> -->
            <!-- <isNotEmpty property="reSendResult">
                #reSendResult#,
            </isNotEmpty>
            <isNotEmpty property="reSendResultDate">
                sysdate(),
            </isNotEmpty> -->            
	            sysdate(),
	            #createId#,
	            sysdate(),
	            #createId#
        )        
    </insert>
    
    <!--
     * @Method Name        : updateCmmComEmailSendInfo
     * @Method description : com_email_send_info(이메일발송 정보) 로그갱신(재발신의 경우)
     * @param              : CmmEmailSendVO
     * @return             : String
     * @throws             : Exception
     -->
    <update id="cmm.CmmEmailSendDAO.updateCmmComEmailSendInfo" parameterClass="CmmEmailSendVO">
        update com_email_send_info set
            email_title = #emailTitle#,
            email_content = #emailContent#,
            re_send_count = ifnull(re_send_count,0)+1,
            re_send_date = sysdate(),
            re_send_id = #reSendId#,
            re_send_result = #reSendResult#,
            re_send_result_date = sysdate(),            
            update_date = sysdate(),
            update_id = #updateId#
        where email_reg_no = #emailRegNo#
    </update>
    
    <!--
     * @Method Name        : selectCmmComEmailSendInfoChk
     * @Method description : 이메일 발송이력을 조회해온다.
     * @param              : CmmEmailSendVO
     * @return             : CmmEmailSendVO
     * @throws             : Exception
     -->
    <select id="cmm.CmmEmailSendDAO.selectCmmComEmailSendInfoChk" parameterClass="CmmEmailSendVO" resultClass="java.lang.String" >
        select
            email_reg_no as emailRegNo
        from com_email_send_info
        where 1=1
        and receiver_id = #receiverId#
        and email_send_type = 'G016002'
    </select>
    
    <!--
     * @Method Name        : cmm.CmmEmailSendDAO.selectCmmComEmailTermsList
     * @Method description : 고객의 정보제공동의 정보를 조회한다.
     * @param              : CmmEmailSendVO
     * @return             : CmmEmailSendVO
     * @throws             : Exception
     -->
    <select id="cmm.CmmEmailSendDAO.selectCmmComEmailTermsList" parameterClass="CmmEmailSendVO" resultClass="CmmEmailSendVO">
		select  a.customer_reg_no               as customerRegNo,
		        a.service_reg_no                as serviceRegNo,
		        a.terms_reg_no                  as termsRegNo,
		        a.terms_auth_yn                 as termsAuthYn,
		        a.subcompany_code_id            as subcompanyCodeId,
		        sub.company_name_kor_alias      as subcompanyName,
		        a.app_id                        as appId,
		        a.app_name                      as appName,
		        a.pubcompany_code_id            as pubcompanyCodeId,
		        pub.company_name_kor_alias      as pubcompanyName,
		        a.api_id                        as apiId,
		        a.api_name                      as apiName,
		        b.customer_vtaccount_no         as customerVtaccountNo,
		        b.customer_vtaccount_alias      as customerVtaccountAlias,
		        a.terms_start_date              as termsStartDate,
		        a.terms_expire_date             as termsExpireDate
		from(
		    select  a.*,
		            b.api_name,
		            c.company_code_id       as pubcompany_code_id,
		            c.exposure_order        as pubexposure_order
		    from(
		        select  a.*,    
		                b.app_name,
		                b.company_code_id   as subcompany_code_id,
		                c.exposure_order    as subexposure_order
		        from(
		            select  a.customer_reg_no,
		                    a.service_reg_no,
		                    a.app_id,
		                    b.api_id,
		                    b.customer_realaccount_no,
		                    a.terms_reg_no,
		                    a.terms_auth_yn,
		                    a.terms_start_date,
		                    a.terms_expire_date
		            from(
		                select  a.*,
		                        b.terms_auth_yn,
		                        date_format(b.terms_start_date, '%Y-%m-%d') as terms_start_date,
		                        date_format(b.terms_expire_date, '%Y-%m-%d') as terms_expire_date
		                from(
		                    select  customer_reg_no,
		                            service_reg_no,
		                            app_id,
		                            terms_reg_no
		                    from spt_customer_service_profile
		                    where customer_reg_no = #customerRegNo#
		                    and terms_reg_no  = #termsRegNo#
		                ) a
		                left join spt_customer_service_terms_profile b 
		                on a.customer_reg_no = b.customer_reg_no
		                and a.terms_reg_no = b.terms_reg_no
		            ) a, spt_customer_service_account_profile b
		            where a.customer_reg_no = b.customer_reg_no
		            and a.service_reg_no = b.service_reg_no
		            and a.app_id = b.app_id
		            and b.delete_date is null
		        ) a
		        left join com_app_view b on a.app_id = b.app_id
		        left join com_app_info c on a.app_id = c.app_id
		        where b.app_status = 'G022002'        /*app 상태 (CA 정보)*/
		        and c.exposure_yn = 'Y'
		    ) a 
		    left join com_api_view b on a.api_id = b.api_id
		    left join com_api_info c on a.api_id = c.api_id 
		    where c.exposure_yn = 'Y'
		    and c.api_account_yn = 'Y'
		) a 
		left join(
		    select *
		    from spt_customer_account_profile
		    where customer_reg_no = #customerRegNo#
		) b
		on a.pubcompany_code_id = b.company_code_id
		and a.customer_realaccount_no = b.customer_realaccount_no
		join com_company_profile as pub on a.pubcompany_code_id = pub.company_code_id and pub.delete_date is null and pub.exposure_yn = 'Y'  
		join com_company_profile as sub on a.subcompany_code_id = sub.company_code_id and sub.delete_date is null and sub.exposure_yn = 'Y'
		order by 
		    ifnull(sub.exposure_order, 'Z') asc, sub.company_name_kor_alias asc, 
		    ifnull(a.subexposure_order, 'Z') asc, a.app_name asc, 
		    ifnull(pub.exposure_order, 'Z') asc, pub.company_name_kor_alias asc, 
		    ifnull(a.pubexposure_order, 'Z') asc,  a.api_name asc
    </select>
    
    <!--
     * @Method Name        : cmm.CmmEmailSendDAO.selectCmmEmailCustomerInfo
     * @Method description : 사용자 정보를 조회한다.
     * @param              : CmmEmailSendVO
     * @return             : CmmEmailSendVO
     * @throws             : Exception
     -->
    <select id="cmm.CmmEmailSendDAO.selectCmmEmailCustomerInfo" parameterClass="CmmEmailSendVO" resultClass="CmmEmailSendVO">
		select  a.customer_name_kor           as customerName,
		        dec_char_sel(
		            a.customer_email,
		            10,
		            'ARIA',
		            'spt_customer_info_profile',
		            'customer_email',
		            user(),
		            connection_id()
		        )                             as customerEmail
		from spt_customer_info_profile a
		where a.customer_reg_no = #customerRegNo#
    </select>
    
    <!--
     * @Method Name        : cmm.CmmEmailSendDAO.selectCronSvcTermsList
     * @Method description : 정보제공동의 메일발송 대상 목록 조회
     * @param              : CmmEmailCronSvcTermsVO
     * @return             : CmmEmailCronSvcTermsVO
     * @throws             : Exception
     -->
    <select id="cmm.CmmEmailSendDAO.selectCronSvcTermsList" parameterClass="CmmEmailCronSvcTermsVO" resultClass="CmmEmailCronSvcTermsVO">
		select  a.customer_reg_no               as customerRegNo,
		        a.service_reg_no                as serviceRegNo,
		        a.terms_reg_no                  as termsRegNo,
		        a.terms_auth_yn                 as termsAuthYn,
		        a.subcompany_code_id            as subcompanyCodeId,
		        sub.company_name_kor_alias      as subcompanyName,
		        a.app_id                        as appId,
		        a.app_name                      as appName,
		        a.pubcompany_code_id            as pubcompanyCodeId,
		        pub.company_name_kor_alias      as pubcompanyName,
		        a.api_id                        as apiId,
		        a.api_name                      as apiName,
		        b.customer_vtaccount_no         as customerVtaccountNo,
		        b.customer_vtaccount_alias      as customerVtaccountAlias,
		        a.terms_start_date              as termsStartDate,
		        a.terms_expire_date             as termsExpireDate
		from(
		    select  a.*,
		            b.api_name,
		            c.company_code_id       as pubcompany_code_id,
		            c.exposure_order        as pubexposure_order
		    from(
		        select  a.*,    
		                b.app_name,
		                b.company_code_id   as subcompany_code_id,
		                c.exposure_order    as subexposure_order
		        from(
		            select  a.customer_reg_no,
		                    a.service_reg_no,
		                    a.app_id,
		                    b.api_id,
		                    b.customer_realaccount_no,
		                    a.terms_reg_no,
		                    a.terms_auth_yn,
		                    a.terms_start_date,
		                    a.terms_expire_date
		            from(
		                select  a.*,
		                        b.terms_auth_yn,
		                        date_format(b.terms_start_date, '%Y-%m-%d') as terms_start_date,
		                        date_format(b.terms_expire_date, '%Y-%m-%d') as terms_expire_date,
		                        case when 
		                            $SQL1$
		                        then
		                            'Y'
		                        else
		                            'N'
		                        end as terms_date_yn
		                from(
		                    select  customer_reg_no,
		                            service_reg_no,
		                            app_id,
		                            terms_reg_no
		                    from spt_customer_service_profile
		                    where delete_date is null
		                    and terms_reg_no is not null
		                    and customer_reg_no in (
		                        select customer_reg_no
		                        from spt_customer_info_profile
		                        where delete_date is null
		                        and customer_reg_status not in ('G005004')                    
		                    )
		                    /* 메일 발신자 제외 처리 */
		                    and customer_reg_no not in (
						        select receiver_id
						        from com_email_send_info
						        where date_format(ifnull(re_send_date, send_date), '%Y%m%d') = date_format(sysdate(), '%Y%m%d')
                                and ifnull(re_send_result, send_result) = 'G021001'
						        and email_send_type = #emailSendType#
						        group by receiver_id        
						    )
		                ) a
		                left join spt_customer_service_terms_profile b 
		                on a.customer_reg_no = b.customer_reg_no
		                and a.terms_reg_no = b.terms_reg_no
		                where b.terms_auth_yn = 'N'     /* 정보제공도의 처리한 정보 */
		            ) a, spt_customer_service_account_profile b
		            where a.customer_reg_no = b.customer_reg_no
		            and a.service_reg_no = b.service_reg_no
		            and a.app_id = b.app_id
		            and b.delete_date is null    
		            and a.terms_date_yn = 'Y'           /* 처리기간안에 있는 정보만 */
		        ) a
		        left join com_app_view b on a.app_id = b.app_id
		        left join com_app_info c on a.app_id = c.app_id
		    ) a 
		    left join com_api_view b on a.api_id = b.api_id
		    left join com_api_info c on a.api_id = c.api_id
		) a 
		left join spt_customer_account_profile b
		on a.pubcompany_code_id = b.company_code_id
		and a.customer_realaccount_no = b.customer_realaccount_no
		<!-- 20170406 수정 -->
		and a.customer_reg_no = b.customer_reg_no
		<!-- // 20170406 수정 -->
		join com_company_profile as pub on a.pubcompany_code_id = pub.company_code_id and pub.delete_date is null and pub.exposure_yn = 'Y'  
		join com_company_profile as sub on a.subcompany_code_id = sub.company_code_id and sub.delete_date is null and sub.exposure_yn = 'Y'
		order by 
		    a.customer_reg_no asc, a.service_reg_no asc,
		    ifnull(sub.exposure_order, 'Z') asc, sub.company_name_kor_alias asc, 
		    ifnull(a.subexposure_order, 'Z') asc, a.app_name asc, 
		    ifnull(pub.exposure_order, 'Z') asc, pub.company_name_kor_alias asc, 
		    ifnull(a.pubexposure_order, 'Z') asc,  a.api_name asc
    </select>
    
</sqlMap>