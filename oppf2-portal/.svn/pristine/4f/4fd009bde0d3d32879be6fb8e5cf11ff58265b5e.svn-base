<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="kr.co.koscom.oppf.apt.sptUsr.service.impl.SptUserAccountDAO">

  	<typeAlias alias="SptUserAccountVO" type="kr.co.koscom.oppf.apt.sptUsr.service.SptUserAccountVO"/>
  	  	
  	<!-- 목록 조회조건 -->
    <sql id="fromWhereAnd">
		from spt_customer_account_profile a
		join spt_customer_info_profile b on a.customer_reg_no = b.customer_reg_no
		join com_company_profile as pub on a.company_code_id = pub.company_code_id and pub.delete_date is null
		where 1=1
		        
		<isNotEqual property="excelType" compareValue="down">
		
        <!-- 서비스 제공자 -->
        <isNotEmpty property="searchPubcompanyCodeId" prepend="and">
            <isNotEqual property="searchPubcompanyCodeIdAllYn" compareValue="Y">
                a.company_code_id
                <iterate  property="searchPubcompanyCodeId" prepend="IN" open="(" close=")" conjunction=",">
                    #searchPubcompanyCodeId[]#
                </iterate> 
            </isNotEqual>
        </isNotEmpty>
        
        <!-- 계정상태 -->
        <isNotEmpty property="searchCustomerRegStatus" prepend="and">
            <isNotEqual property="searchCustomerRegStatusAllYn" compareValue="Y">
                b.customer_reg_status
                <iterate  property="searchCustomerRegStatus" prepend="IN" open="(" close=")" conjunction=",">
                    #searchCustomerRegStatus[]#
                </iterate> 
            </isNotEqual>
        </isNotEmpty>
		
		<!-- 가상계좌 상태 -->
        <isNotEmpty property="searchCustomerVtaccountStatus" prepend="and">
            <isNotEqual property="searchCustomerVtaccountStatusAllYn" compareValue="Y">
                a.customer_vtaccount_status
                <iterate  property="searchCustomerVtaccountStatus" prepend="IN" open="(" close=")" conjunction=",">
                    #searchCustomerVtaccountStatus[]#
                </iterate> 
            </isNotEqual>
        </isNotEmpty>
                                    
        <!-- 조회일 -->
        <isNotEmpty property="searchDateType">
            <!-- 등록일 -->
            <isEqual property="searchDateType" compareValue="create" prepend="and">
                ifnull(date_format(a.create_date, '%Y%m%d'), '') between replace(#searchDateFrom#, '-', '') and replace(#searchDateTo#, '-', '')
            </isEqual>
            <!-- 수정일 -->
            <isEqual property="searchDateType" compareValue="update" prepend="and">
                ifnull(date_format(a.update_date, '%Y%m%d'), '') between replace(#searchDateFrom#, '-', '') and replace(#searchDateTo#, '-', '')
            </isEqual>
            <!-- 삭제일 -->
            <isEqual property="searchDateType" compareValue="delete" prepend="and">
                ifnull(date_format(a.customer_vtaccount_expire_date, '%Y%m%d'), '') between replace(#searchDateFrom#, '-', '') and replace(#searchDateTo#, '-', '')
            </isEqual>
        </isNotEmpty>
        
		<!-- 구분 -->
        <isNotEmpty property="searchKeyword">
            <!-- 이름 -->
            <isEqual property="searchCondition" compareValue="name" prepend="and">
                (
                    b.customer_name_kor like concat('%', #searchKeyword#, '%') or
                    b.customer_name_eng like concat('%', #searchKeyword#, '%')
                )
            </isEqual>
            <!-- id -->
            <isEqual property="searchCondition" compareValue="id" prepend="and">
                b.customer_id like concat('%', #searchKeyword#, '%')
            </isEqual>
            <!-- 이메일 -->
            <isEqual property="searchCondition" compareValue="email" prepend="and">
                dec_char_sel(b.customer_email,10,'ARIA','spt_customer_info_profile','customer_email',user(),connection_id()) like concat('%', #searchKeyword#, '%')
            </isEqual>
            <!-- 전체 -->
            <isEqual property="searchCondition" compareValue="all" prepend="and">
                (
                    b.customer_name_kor like concat('%', #searchKeyword#, '%') or
                    b.customer_name_eng like concat('%', #searchKeyword#, '%') or
                    b.customer_id like concat('%', #searchKeyword#, '%') or
                    dec_char_sel(b.customer_email,10,'ARIA','spt_customer_info_profile','customer_email',user(),connection_id()) like concat('%', #searchKeyword#, '%')
                )
            </isEqual>
        </isNotEmpty>
        
        </isNotEqual>
    </sql>
  	
	<!--
     * @Method Name        : apt.SptUserAccountDAO.selectSptUserAccountList
     * @Method description : 가상계좌 목록 조회
     * @param              : SptUserAccountVO
     * @return             : SptUserAccountVO
     * @throws             : Exception
     -->
    <select id="apt.SptUserAccountDAO.selectSptUserAccountList" parameterClass="SptUserAccountVO" resultClass="SptUserAccountVO">
		select  a.customer_reg_no,
		        b.customer_id                                               as customerId,
		        b.customer_name_kor                                         as customerNameKor,
		        b.customer_name_eng                                         as customerNameEng,
		        dec_char_sel(
		            b.customer_email,
		            10,
		            'ARIA',
		            'spt_customer_info_profile',
		            'customer_email',
		            user(),
		            connection_id()
		        )                                                           as customerEmail,
		        b.customer_reg_status                                       as customerRegStatus,
		        (
		            select code_name_kor
		            from com_system_code
		            where concat(system_grp_code, system_code) = b.customer_reg_status           
		        )                                                           as customerRegStatusName,
		        dec_char_sel(
		            a.customer_realaccount_no,
		            10,
		            'ARIA',
		            'spt_customer_service_account_profile',
		            'customer_realaccount_no',
		            user(),
		            connection_id()
		        )                                                           as customerRealaccountNo,
		        a.customer_vtaccount_no                                     as customerVtaccountNo,
		        a.customer_vtaccount_alias                                  as customerVtaccountAlias,
		        a.customer_vtaccount_status                                 as customerVtaccountStatus,
		        (
		            select code_name_kor
		            from com_system_code
		            where concat(system_grp_code, system_code) = a.customer_vtaccount_status           
		        )                                                           as customerVtaccountStatusName,
		        a.customer_realaccount_type                                 as customerRealaccountType,
		        (
		            select code_name_kor
		            from com_system_code
		            where concat(system_grp_code, system_code) = a.customer_realaccount_type           
		        )                                                           as customerRealaccountTypeName,
		        a.company_code_id                                           as pubcompanyCodeId,
		        pub.company_name_kor_alias                                  as pubcompanyCodeName,
		        ifnull(date_format(a.create_date, '%Y-%m-%d %H:%i'), '')    as createDate,
		        ifnull(date_format(a.update_date, '%Y-%m-%d %H:%i'), '')    as updateDate,
		        ifnull(date_format(a.customer_vtaccount_expire_date, '%Y-%m-%d %H:%i'), '')    as deleteDate,
       			pub.company_name_eng_alias        as companyNameEngAlias,
		    	(select code_name_eng
		     	from com_system_code 
		     	where system_grp_code='G010'
		     	and a.customer_realaccount_type = concat('G010',system_code)) as customerRealaccountTypeNmEng /* 일반회원가상계좌프로파일.실계좌유형영문명 */
		<include refid="fromWhereAnd"/>
		<include refid="CmmnFuncDAO.CmmnPaging"/>
    </select>
    
    <!--
     * @Method Name        : apt.SptUserAccountDAO.selectSptUserAccountListCnt
     * @Method description : 가상계좌 목록의 total cnt를 조회한다.
     * @param              : SptUserAccountVO
     * @return             : int
     * @throws             : Exception
     -->
    <select id="apt.SptUserAccountDAO.selectSptUserAccountListCnt" parameterClass="SptUserAccountVO" resultClass="int">
        select  count(*) as totalCount
        <include refid="fromWhereAnd"/>
    </select>
    
    <!--
     * @Method Name        : apt.SptUserAccountDAO.selectSptUserAccountListExcel
     * @Method description : 가상계좌 excel 목록 조회
     * @param              : SptUserAccountVO
     * @return             : SptUserAccountVO
     * @throws             : Exception
     -->
    <select id="apt.SptUserAccountDAO.selectSptUserAccountListExcel" parameterClass="SptUserAccountVO" resultClass="SptUserAccountVO">
		select  a.customer_reg_no,
                b.customer_id                                               as customerId,
                b.customer_name_kor                                         as customerNameKor,
                b.customer_name_eng                                         as customerNameEng,
                dec_char_sel(
                    b.customer_email,
                    10,
                    'ARIA',
                    'spt_customer_info_profile',
                    'customer_email',
                    user(),
                    connection_id()
                )                                                           as customerEmail,
                b.customer_reg_status                                       as customerRegStatus,
                (
                    select code_name_kor
                    from com_system_code
                    where concat(system_grp_code, system_code) = b.customer_reg_status           
                )                                                           as customerRegStatusName,
                dec_char_sel(
                    a.customer_realaccount_no,
                    10,
                    'ARIA',
                    'spt_customer_service_account_profile',
                    'customer_realaccount_no',
                    user(),
                    connection_id()
                )                                                           as customerRealaccountNo,
                a.customer_vtaccount_no                                     as customerVtaccountNo,
                a.customer_vtaccount_alias                                  as customerVtaccountAlias,
                a.customer_vtaccount_status                                 as customerVtaccountStatus,
                (
                    select code_name_kor
                    from com_system_code
                    where concat(system_grp_code, system_code) = a.customer_vtaccount_status           
                )                                                           as customerVtaccountStatusName,
                a.customer_realaccount_type                                 as customerRealaccountType,
                (
                    select code_name_kor
                    from com_system_code
                    where concat(system_grp_code, system_code) = a.customer_vtaccount_status           
                )                                                           as customerRealaccountTypeName,
                a.company_code_id                                           as pubcompanyCodeId,
                pub.company_name_kor_alias                                  as pubcompanyCodeName,
                ifnull(date_format(a.create_date, '%Y-%m-%d %H:%i'), '')    as createDate,
                ifnull(date_format(a.update_date, '%Y-%m-%d %H:%i'), '')    as updateDate,
                ifnull(date_format(a.customer_vtaccount_expire_date, '%Y-%m-%d %H:%i'), '')    as deleteDate
        <include refid="fromWhereAnd"/>
        order by $listOrder$
    </select>
    
</sqlMap>