<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="kr.co.koscom.oppf.apt.plan.service.impl.ApiPlanManageDAO">

  	<typeAlias alias="ApiPlanManageVO" type="kr.co.koscom.oppf.apt.plan.service.ApiPlanManageVO"/>
  	
  	<!-- api 목록 조회 조건 -->
    <sql id="fromWhereAnd">
        from com_app_apilist_view a,
        (
            select  a.app_id,
                    a.app_key,
                    a.app_name,
                    a.app_status,
                    (
                        select code_name_kor
                        from com_system_code
                        where concat(system_grp_code, system_code) = a.app_status           
                    ) as app_status_name
            from com_app_view a            
        ) app,
        (
            select  a.api_id,
                    a.api_name,
                    a.api_category,
                    (
                        select code_name_kor
                        from com_system_code
                        where concat(system_grp_code, system_code) = a.api_category           
                    )                  as api_category_name,
                    a.company_code_id  as api_company_code_id, 
                    b.company_name_kor_alias as api_company_name,
                    a.create_id,
                    case when instr(a.create_id, 'A') > 0 then
                        (
                            select admin_name_kor
                            from com_admin_profile
                            where admin_profile_reg_no = a.create_id
                        )
                    else
                        (
                            select operator_name_kor
                            from com_company_operator_profile
                            where operator_profile_reg_no = a.create_id
                        )
                    end                         as create_id_name,
                    a.create_date
            from(        
                select  a.api_id,
                        a.api_name,
                        b.api_category,
                        b.company_code_id,
                        ifnull(b.update_id, b.create_id) as create_id,
                        date_format(ifnull(b.update_date, b.create_date), '%Y-%m-%d %H:%i') as create_date
                from com_api_view a
                left join com_api_info as b on a.api_id = b.api_id
            ) a    
            left join com_company_profile as b on a.company_code_id = b.company_code_id
        ) api
        where a.app_id = app.app_id
        and a.api_id = api.api_id         
        
        <isNotEqual property="excelType" compareValue="down">
        
  	    <!-- 구분 -->
        <isNotEmpty property="searchKeyword">
            <!-- app id -->
            <isEqual property="searchCondition" compareValue="appId" prepend="and">
                a.app_id like concat('%', #searchKeyword#, '%')
            </isEqual>
            <!-- app name -->
            <isEqual property="searchCondition" compareValue="appName" prepend="and">
                app.app_name like concat('%', #searchKeyword#, '%')
            </isEqual>
            <!-- app key -->
            <isEqual property="searchCondition" compareValue="appKey" prepend="and">
                app.app_key like concat('%', #searchKeyword#, '%')
            </isEqual>
            
            <!-- api id -->
            <isEqual property="searchCondition" compareValue="apiId" prepend="and">
                a.api_id like concat('%', #searchKeyword#, '%')
            </isEqual>
            <!-- api name -->
            <isEqual property="searchCondition" compareValue="apiName" prepend="and">
                api.api_name like concat('%', #searchKeyword#, '%')
            </isEqual>
            
            <!-- 전체 -->
            <isEqual property="searchCondition" compareValue="all" prepend="and">
                (
                    a.app_id like concat('%', #searchKeyword#, '%') or
                    app.app_name like concat('%', #searchKeyword#, '%') or
                    app.app_key like concat('%', #searchKeyword#, '%') or
                    a.api_id like concat('%', #searchKeyword#, '%') or
                    api.api_name like concat('%', #searchKeyword#, '%')
                )
            </isEqual>
        </isNotEmpty>
        
        <!-- app 상태 -->
        <isNotEmpty property="searchAppStatus" prepend="and">
            <isNotEqual property="searchAppStatusAllYn" compareValue="Y">
                app.app_status
                <iterate  property="searchAppStatus" prepend="IN" open="(" close=")" conjunction=",">
                    #searchAppStatus[]#
                </iterate> 
            </isNotEqual>
        </isNotEmpty>
        
        <!-- api 구분 -->
        <isNotEmpty property="searchApiCategory" prepend="and">
            <isNotEqual property="searchApiCategoryAllYn" compareValue="Y">
                api.api_category
                <iterate  property="searchApiCategory" prepend="IN" open="(" close=")" conjunction=",">
                    #searchApiCategory[]#
                </iterate> 
            </isNotEqual>
        </isNotEmpty>
        
        <!-- plan 종류 -->
        <isNotEmpty property="searchPlanType" prepend="and">
            <isNotEqual property="searchPlanTypeAllYn" compareValue="Y">
                (
				    select concat(system_grp_code, system_code)
				    from com_system_code
				    where system_grp_code = 'G024'
				    and code_extend1 = a.api_plan_id
				    and delete_date is null
				)
                <iterate  property="searchPlanType" prepend="IN" open="(" close=")" conjunction=",">
                    #searchPlanType[]#
                </iterate> 
            </isNotEqual>
        </isNotEmpty>
                        
        <!-- 서비스 제공자 -->
        <isNotEmpty property="searchCompanyCodeId" prepend="and">
            <isNotEqual property="searchCompanyCodeIdAllYn" compareValue="Y">
                api.api_company_code_id
                <iterate  property="searchCompanyCodeId" prepend="IN" open="(" close=")" conjunction=",">
                    #searchCompanyCodeId[]#
                </iterate> 
            </isNotEqual>
        </isNotEmpty>
        
        <!-- 조회일 -->
        <isNotEmpty property="searchDateFrom" prepend="and">
            replace(api.create_date, '-', '') between replace(#searchDateFrom#, '-', '') and replace(#searchDateTo#, '-', '')
        </isNotEmpty>
        
        </isNotEqual>
  	</sql>
  	
  	
  	<!--
     * @Method Name        : apt.ApiPlanManageDAO.selectApiPlanManageListTotalCount
     * @Method description : api plan 목록의 총개수를 조회한다.
     * @param              : ApiPlanManageVO
     * @return             : int
     * @throws             : Exception
     -->
    <select id="apt.ApiPlanManageDAO.selectApiPlanManageListTotalCount" parameterClass="ApiPlanManageVO" resultClass="int">
        select count(a.api_id) as totalcount
        <include refid="fromWhereAnd"/>
    </select>
  	
	<!--
     * @Method Name        : apt.ApiPlanManageDAO.selectApiPlanManageList
     * @Method description : api plan 목록을 조회한다.
     * @param              : ApiPlanManageVO
     * @return             : ApiPlanManageVO
     * @throws             : Exception
     -->
    <select id="apt.ApiPlanManageDAO.selectApiPlanManageList" parameterClass="ApiPlanManageVO" resultClass="ApiPlanManageVO">
		select  a.app_id                    as appId,
		        app.app_key                 as appKey,
		        app.app_name                as appName,   
		        app.app_status              as appStatus,
		        app.app_status_name         as appStatusName,
		        a.api_id                    as apiId,
		        api.api_name                as apiName,
		        api.api_category            as apicategory,
		        api.api_category_name       as apiCategoryName,
		        api.api_company_code_id     as apiCompanyCodeId,
		        api.api_company_name        as apiCompanyName,
		        a.api_plan_id               as apiPlanId,
		        (
		            select concat(system_grp_code, system_code)
		            from com_system_code
		            where system_grp_code = 'G024'
		            and code_extend1 = a.api_plan_id
		            and delete_date is null
		        )                           as planType,
		        (
		            select code_name_kor
		            from com_system_code
		            where system_grp_code = 'G024'
		            and code_extend1 = a.api_plan_id
		            and delete_date is null
		        )                           as planTypeName,
		        api.create_id               as createId,
		        api.create_id_name          as createIdName,
		        api.create_date             as createDate	        
        <include refid="fromWhereAnd"/>
        <include refid="CmmnFuncDAO.CmmnPaging"/>
    </select>
    
    <!--
     * @Method Name        : apt.ApiPlanManageDAO.selectApiPlanManageListExcel
     * @Method description : api plan excel 목록을 조회한다.
     * @param              : ApiPlanManageVO
     * @return             : ApiPlanManageVO
     * @throws             : Exception
     -->
    <select id="apt.ApiPlanManageDAO.selectApiPlanManageListExcel" parameterClass="ApiPlanManageVO" resultClass="ApiPlanManageVO">
        select  a.app_id                    as appId,
                app.app_key                 as appKey,
                app.app_name                as appName,   
                app.app_status              as appStatus,
                app.app_status_name         as appStatusName,
                a.api_id                    as apiId,
                api.api_name                as apiName,
                api.api_category            as apicategory,
                api.api_category_name       as apiCategoryName,
                api.api_company_code_id     as apiCompanyCodeId,
                api.api_company_name        as apiCompanyName,
                a.api_plan_id               as apiPlanId,
                (
                    select concat(system_grp_code, system_code)
                    from com_system_code
                    where system_grp_code = 'G024'
                    and code_extend1 = a.api_plan_id
                    and delete_date is null
                )                           as planType,
                (
                    select code_name_kor
                    from com_system_code
                    where system_grp_code = 'G024'
                    and code_extend1 = a.api_plan_id
                    and delete_date is null
                )                           as planTypeName,
                api.create_id               as createId,
                api.create_id_name          as createIdName,
                api.create_date             as createDate     
        <include refid="fromWhereAnd"/>
        order by $listOrder$
    </select>
    
    <!--
     * @Method Name        : apt.ApiPlanManageDAO.selectApiPlanManagePopupList
     * @Method description : api plan 등록 팝업 목록을 조회한다.
     * @param              : ApiPlanManageVO
     * @return             : ApiPlanManageVO
     * @throws             : Exception
     -->
    <select id="apt.ApiPlanManageDAO.selectApiPlanManagePopupList" parameterClass="ApiPlanManageVO" resultClass="ApiPlanManageVO">
		select  system_grp_code                         as systemGrpCode,
		        system_code                             as systemCode,
		        concat(system_grp_code, system_code)    as planType,
		        code_name_kor                           as planTypeName,
		        code_extend1                            as apiPlanId
		from com_system_code
		where system_grp_code = 'G024'
		and delete_date is null
		order by code_seq asc    
    </select>
    
    <!--
     * @Method Name        : apt.ApiPlanManageDAO.saveApiPlanManagePopupListBefore
     * @Method description : 기존 plan 정보를 리셋한다.
     * @param              : ApiPlanManageVO
     * @return             : int
     * @throws             : Exception
     -->
    <update id="apt.ApiPlanManageDAO.saveApiPlanManagePopupListBefore" parameterClass="ApiPlanManageVO">
        update com_system_code set
            code_extend1 = '',
            update_date = sysdate(),
            update_id = #createId#
        where code_extend1 = #apiPlanId#
    </update>
    
    <!--
     * @Method Name        : apt.ApiPlanManageDAO.saveApiPlanManagePopupList
     * @Method description : plan 정보를 저장한다.
     * @param              : ApiPlanManageVO
     * @return             : int
     * @throws             : Exception
     -->
    <update id="apt.ApiPlanManageDAO.saveApiPlanManagePopupList" parameterClass="ApiPlanManageVO">
        update com_system_code set
            code_extend1 = #apiPlanId#,
            update_date = sysdate(),
            update_id = #createId#
        where concat(system_grp_code, system_code) = #planType#
    </update>
</sqlMap>