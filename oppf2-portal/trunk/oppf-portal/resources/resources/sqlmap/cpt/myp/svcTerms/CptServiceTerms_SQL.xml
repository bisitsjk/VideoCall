<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="kr.co.koscom.oppf.cpt.myp.svcTerms.service.impl.CptServiceTermsDAO">

  	<typeAlias alias="CptServiceTermsVO" type="kr.co.koscom.oppf.cpt.myp.svcTerms.service.CptServiceTermsVO"/>
  	
  	<!-- 목록 조회조건 -->
    <sql id="fromWhereAnd">
		from(
		    select  a.*,
		            b.pubcompany_code_id
		    from(
		        select  a.customer_reg_no,
		                a.service_reg_no,
		                a.app_id,
		                b.terms_reg_no,
		                b.subcompany_code_id,
		                b.terms_start_date,
		                b.terms_expire_date,
		                case when a.delete_date is not null then
		                    'G030003'   /*폐기*/
		                else
		                    case when date_format(sysdate(), '%Y%m%d') between b.terms_start_date and b.terms_expire_date then
		                        'G030001'   /*동의*/
		                    else
		                        'G030002'   /*재동의 필요*/
		                    end
		                end as terms_status,
		                date_format(b.create_date, '%Y-%m-%d %H:%i') as create_date,
		                date_format(b.update_date, '%Y-%m-%d %H:%i') as update_date
		        from spt_customer_service_profile a
		        join spt_customer_service_terms_profile b 
		        on a.customer_reg_no = b.customer_reg_no
		        and a.terms_reg_no = b.terms_reg_no
		        where b.terms_auth_yn = 'N'
		    ) a
		    join spt_customer_service_terms_pubcompany_profile b
		    on a.customer_reg_no = b.customer_reg_no
		    and a.terms_reg_no = b.terms_reg_no
		) a
		join spt_customer_info_profile b on a.customer_reg_no = b.customer_reg_no
		join com_company_profile as pub on a.pubcompany_code_id = pub.company_code_id and pub.delete_date is null and pub.exposure_yn = 'Y'  
		join com_company_profile as sub on a.subcompany_code_id = sub.company_code_id and sub.delete_date is null and sub.exposure_yn = 'Y'
		where 1=1

		<isNotEmpty property="searchKeyword">
			<!-- 이름 -->
			<isEqual property="searchCondition" compareValue="name" prepend="and">
				b.customer_name_kor like concat('%', #searchKeyword#, '%')
			</isEqual>
			<!-- id -->
			<isEqual property="searchCondition" compareValue="id" prepend="and">
				b.customer_id  like concat('%', #searchKeyword#, '%')
			</isEqual>
			<!-- Email -->
			<isEqual property="searchCondition" compareValue="email" prepend="and">
                dec_char_sel(b.customer_email,10,'ARIA','spt_customer_info_profile','customer_email',user(),connection_id()) like concat('%', #searchKeyword#, '%')
			</isEqual>
			<!-- 전체 -->
			<isEqual property="searchCondition" compareValue="all" prepend="and">
				(
				b.customer_name_kor like concat('%', #searchKeyword#, '%') or
				b.customer_id  like concat('%', #searchKeyword#, '%') or
                dec_char_sel(b.customer_email,10,'ARIA','spt_customer_info_profile','customer_email',user(),connection_id()) like concat('%', #searchKeyword#, '%')
				)
			</isEqual>
		</isNotEmpty>
		<!-- 둘다:G002001, 서비스 제공자:G002002, 앱개발자 : G002003 -->
		<isNotEmpty property="companyServiceType">
		    <!-- 둘다:G002001 -->
		    <isEqual property="companyServiceType" compareValue="G002001" prepend="and">
		    (
			    pub.company_code_id = (
		            select  company_code_id
		            from com_company_profile
		            where company_profile_reg_no = #companyProfileRegNo#
		        ) or
		        sub.company_code_id = (
                    select  company_code_id
                    from com_company_profile
                    where company_profile_reg_no = #companyProfileRegNo#
                )
	        )
		    </isEqual>
		    <!-- 서비스 제공자:G002002 -->
            <isEqual property="companyServiceType" compareValue="G002002" prepend="and">
	            pub.company_code_id = (
	                select  company_code_id
	                from com_company_profile
	                where company_profile_reg_no = #companyProfileRegNo#
	            )
            </isEqual>
            <!-- 앱개발자 : G002003 -->
            <isEqual property="companyServiceType" compareValue="G002003" prepend="and">
                sub.company_code_id = (
                    select  company_code_id
                    from com_company_profile
                    where company_profile_reg_no = #companyProfileRegNo#
                )
            </isEqual>
		</isNotEmpty>
		
        <!-- 금융정보제공 동의서 상태 -->
        <isNotEmpty property="searchTermsStatus" prepend="and">
            <isNotEqual property="searchTermsStatusAllYn" compareValue="Y">
                a.terms_status
                <iterate  property="searchTermsStatus" prepend="IN" open="(" close=")" conjunction=",">
                    #searchTermsStatus[]#
                </iterate> 
            </isNotEqual>
        </isNotEmpty>
                            
        <!-- 조회기간 -->
        <isNotEmpty property="searchDateFrom" prepend="and">
			date_format(ifnull(a.update_date, a.create_date), '%Y%m%d') between replace(#searchDateFrom#, '-', '') and replace(#searchDateTo#, '-', '')
        </isNotEmpty>
    </sql>
  	
	<!--
     * @Method Name        : cpt.myp.svcTerms.CptServiceTermsDAO.selectCptServiceTermsList
     * @Method description : 금융정보제공 동의서목록 조회
     * @param              : SptUserManageVO
     * @return             : SptUserManageVO
     * @throws             : Exception
     -->
    <select id="cpt.myp.svcTerms.CptServiceTermsDAO.selectCptServiceTermsList" parameterClass="CptServiceTermsVO" resultClass="CptServiceTermsVO">
		select  DISTINCT a.customer_reg_no               as customerRegNo,
		        b.customer_id                   as customerId,
		        b.customer_name_kor             as customerNameKor,
		        a.service_reg_no                as serviceRegNo,
		        a.terms_reg_no                  as termsRegNo,
		        a.app_id                        as appId,
		        a.subcompany_code_id            as subcompanyCodeId,
		        sub.company_name_kor_alias      as subcompanyCodeName,
		        a.pubcompany_code_id            as pubcompanyCodeId,
		        pub.company_name_kor_alias      as pubcompanyCodeName,
		        date_format(a.terms_start_date, '%Y-%m-%d')   as termsStartDate,
                date_format(a.terms_expire_date, '%Y-%m-%d')  as termsExpireDate,
		        a.terms_status                  as termsStatus,
		        (
		            select code_name_kor
		            from com_system_code
		            where concat(system_grp_code, system_code) = a.terms_status           
		        )                               as termsStatusName,
		        a.create_date                   as createDate,
		        a.update_date                   as updateDate
		<include refid="fromWhereAnd"/>
		<include refid="CmmnFuncDAO.CmmnPaging"/>
    </select>
    
    <!--
     * @Method Name        : cpt.myp.svcTerms.CptServiceTermsDAO.selectCptServiceTermsListCnt
     * @Method description : 금융정보제공 동의서목록의 total cnt를 조회한다.
     * @param              : CptServiceTermsVO
     * @return             : int
     * @throws             : Exception
     -->
    <select id="cpt.myp.svcTerms.CptServiceTermsDAO.selectCptServiceTermsListCnt" parameterClass="CptServiceTermsVO" resultClass="int">
        select  count(*) as totalCount
        <include refid="fromWhereAnd"/>
    </select>
    
    <!--
     * @Method Name        : cpt.myp.svcTerms.CptServiceTermsDAO.selectCptServiceTermsListExcel
     * @Method description : 금융정보제공 동의서목록 조회
     * @param              : SptUserManageVO
     * @return             : SptUserManageVO
     * @throws             : Exception
     -->
    <select id="cpt.myp.svcTerms.CptServiceTermsDAO.selectCptServiceTermsListExcel" parameterClass="CptServiceTermsVO" resultClass="CptServiceTermsVO">
        select  DISTINCT a.customer_reg_no               as customerRegNo,
                b.customer_id                   as customerId,
                b.customer_name_kor             as customerNameKor,
                a.service_reg_no                as serviceRegNo,
                a.terms_reg_no                  as termsRegNo,
                a.app_id                        as appId,
                a.subcompany_code_id            as subcompanyCodeId,
                sub.company_name_kor_alias      as subcompanyCodeName,
                a.pubcompany_code_id            as pubcompanyCodeId,
                pub.company_name_kor_alias      as pubcompanyCodeName,
                date_format(a.terms_start_date, '%Y-%m-%d')   as termsStartDate,
                date_format(a.terms_expire_date, '%Y-%m-%d')  as termsExpireDate,
                a.terms_status                  as termsStatus,
                (
                    select code_name_kor
                    from com_system_code
                    where concat(system_grp_code, system_code) = a.terms_status
                )                               as termsStatusName,
                a.create_date                   as createDate,
                a.update_date                   as updateDate
        <isEqual property="excelType" compareValue="excel">
            <include refid="fromWhereAnd"/>
        </isEqual>
        order by $listOrder$
    </select>
    
</sqlMap>